{"version":3,"file":"static/js/874.43812e19.chunk.js","mappings":"qOACMA,EAAWC,EAAQ,KAEZC,EAAYC,EAAAA,EAAAA,IAAH,saASIH,G,uCCRX,SAASI,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAC1BC,EAAS,GAaf,OAZAD,EAAQE,KAAI,SAAAC,GACV,OAAOF,EAAOG,KAAK,CACjBC,SAAUF,EAAMG,IAChBC,UAAWJ,EAAMG,IACjBE,eAAgB,IAChBC,cAAe,OACfC,cAAe,iBACfC,gBAAiB,GACjBC,eAAgB,IAEnB,KAGC,SAACf,EAAD,WACE,SAAC,IAAD,CAAcgB,MAAOZ,KAG1B,C,wBCpBM,IAAMJ,GAAS,uGAWTiB,GAAK,sNAULC,GAAM,6EAINC,GAAW,sSAiBXC,GAAa,uOAcbC,GAAc,OAAOC,EAAAA,IAAP,sBAAH,gDChDT,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOrB,EAAP,KAAgBsB,EAAhB,KACA,GAA0CD,EAAAA,EAAAA,WAAS,GAAnD,eAAOE,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAWD,EAAAA,EAAAA,QAAO,OAExBE,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,CAACJ,IAEJ,IAAMI,EAAW,WACfC,UAAUC,aACPC,aAAa,CACZC,MAAO,CACLC,MAAO,CAAEC,IAAK,IAAKC,MAAO,IAAKC,IAAK,KACpCC,OAAQ,CAAEH,IAAK,IAAKC,MAAO,KAAMC,IAAK,MACtCE,WAAY,UAGfC,MAAK,SAAAC,GACJ,IAAIR,EAAQR,EAASiB,QACrBT,EAAMU,UAAYF,EAClBR,EAAMW,MACP,IACAC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EACjB,GACJ,EAsBD,OACE,UAAC,EAAD,YACE,SAAChC,EAAD,CAAOkC,UAAW,kBAtBA,WACpB,IAAIf,EAAQR,EAASiB,QACjBO,EAAQtB,EAASe,QACjBQ,EAAMD,EAAME,WAAW,MAK3B,OAFAF,EAAMf,MAFQ,IAGde,EAAMX,OAFS,KAGRc,aAAY,WACjBF,EAAIG,UAAUpB,EAAO,EAAG,EALZ,IACC,KAKd,GAAE,IACJ,CAW2BqB,EAAN,EAAuBC,IAAK9B,KAC9C,SAACV,EAAD,CAAQwC,IAAK5B,KACb,SAACV,EAAD,CACEuC,KAAK,SACLC,QAAS,WACPjC,GAAkBD,EACnB,EAJH,UAME,SAACL,EAAD,OAEF,SAACF,EAAD,CAAawC,KAAK,SAASC,QAAS,kBAnBtB,WAChB,IAEMtD,EAAQ,CAAEG,IAFJqB,EAASe,QACFgB,UAAU,eAE7BpC,EAAW,GAAD,eAAKtB,GAAL,CAAcG,IACzB,CAc6CwD,EAAN,IAEnCpC,IAAiB,SAACxB,EAAD,CAASC,QAASA,MAGzC,C","sources":["components/gallery/gallery.styled.jsx","components/gallery/gallery.jsx","pages/camera/camera.styled.jsx","pages/camera/camera.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nconst backdrop = require('../elements/backdropContainer/backdrop.webp');\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: #ffffff;\n  width: 300px;\n  height: 97%;\n  border-top-left-radius: 1.25em;\n  border-top-right-radius: 1.25em;\n  background-image: url(${backdrop});\n  background-size: cover;\n  z-index: 4;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 0em;\n    height: 0em;\n  }\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n`;\n","import { Container } from './gallery.styled';\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\n\nexport default function Gallery({ gallery }) {\n  const images = [];\n  gallery.map(image => {\n    return images.push({\n      original: image.src,\n      thumbnail: image.src,\n      originalHeight: 500,\n      originalWidth: '100%',\n      originalClass: 'featured-slide',\n      thumbnailHeight: 60,\n      thumbnailWidth: 40,\n    });\n  });\n\n  return (\n    <Container>\n      <ImageGallery items={images} />\n    </Container>\n  );\n}\n","import styled from '@emotion/styled/macro';\nimport { FcGallery } from 'react-icons/fc';\n\nexport const Container = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Frame = styled.iframe`\n  border-top-left-radius: 1.2em;\n  border-top-right-radius: 1.2em;\n`;\n\nexport const Video = styled.video`\n  position: absolute;\n  transform: scaleX(-1);\n  width: 300px;\n  height: calc(100% - 36px);\n  object-fit: cover;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n`;\n\nexport const Canvas = styled.canvas`\n  display: none;\n`;\n\nexport const ButtonPhoto = styled.button`\n  position: absolute;\n  bottom: 7%;\n  left: 50%;\n  transform: translate(-50%, -7%);\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  border: none;\n  background: #ffffffcc;\n  z-index: 2;\n  cursor: pointer;\n  &:active {\n    box-shadow: inset 0px 0px 5px 5px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const ButtonGallery = styled.button`\n  position: absolute;\n  bottom: 7%;\n  left: 15%;\n  transform: translate(-50%, -7%);\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  border: none;\n  z-index: 2;\n  background: #ffffffcc;\n  cursor: pointer;\n`;\n\nexport const IconGallery = styled(FcGallery)`\n  width: 80%;\n  height: 80%;\n`;\n","import React, { useEffect, useState, useRef } from 'react';\nimport Gallery from 'components/gallery/gallery';\nimport {\n  Container,\n  Video,\n  Canvas,\n  ButtonPhoto,\n  ButtonGallery,\n  IconGallery,\n} from './camera.styled';\n\nexport default function Camera() {\n  const [gallery, setGallery] = useState([]);\n  const [isOpenGallery, setIsOpenGallery] = useState(false);\n  const videoRef = useRef(null);\n  const photoRef = useRef(null);\n\n  useEffect(() => {\n    getVideo();\n  }, [videoRef]);\n\n  const getVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: {\n          width: { min: 360, ideal: 720, max: 980 },\n          height: { min: 640, ideal: 1280, max: 1920 },\n          facingMode: 'user',\n        },\n      })\n      .then(stream => {\n        let video = videoRef.current;\n        video.srcObject = stream;\n        video.play();\n      })\n      .catch(err => {\n        throw new Error(err);\n      });\n  };\n\n  const paintToCanvas = () => {\n    let video = videoRef.current;\n    let photo = photoRef.current;\n    let ctx = photo.getContext('2d');\n    const width = 720;\n    const height = 1280;\n    photo.width = width;\n    photo.height = height;\n    return setInterval(() => {\n      ctx.drawImage(video, 0, 0, width, height);\n    }, 200);\n  };\n\n  const takePhoto = () => {\n    let photo = photoRef.current;\n    const data = photo.toDataURL('image/jpeg');\n    const image = { src: data };\n    setGallery([...gallery, image]);\n  };\n\n  return (\n    <Container>\n      <Video onCanPlay={() => paintToCanvas()} ref={videoRef} />\n      <Canvas ref={photoRef} />\n      <ButtonGallery\n        type=\"button\"\n        onClick={() => {\n          setIsOpenGallery(!isOpenGallery);\n        }}\n      >\n        <IconGallery />\n      </ButtonGallery>\n      <ButtonPhoto type=\"button\" onClick={() => takePhoto()}></ButtonPhoto>\n\n      {isOpenGallery && <Gallery gallery={gallery} />}\n    </Container>\n  );\n}\n"],"names":["backdrop","require","Container","styled","Gallery","gallery","images","map","image","push","original","src","thumbnail","originalHeight","originalWidth","originalClass","thumbnailHeight","thumbnailWidth","items","Video","Canvas","ButtonPhoto","ButtonGallery","IconGallery","FcGallery","Camera","useState","setGallery","isOpenGallery","setIsOpenGallery","videoRef","useRef","photoRef","useEffect","getVideo","navigator","mediaDevices","getUserMedia","video","width","min","ideal","max","height","facingMode","then","stream","current","srcObject","play","catch","err","Error","onCanPlay","photo","ctx","getContext","setInterval","drawImage","paintToCanvas","ref","type","onClick","toDataURL","takePhoto"],"sourceRoot":""}