{"version":3,"file":"static/js/733.b8d48359.chunk.js","mappings":"2PAGaA,EAAYC,EAAAA,EAAAA,IAAH,gFAWTC,GALQD,EAAAA,EAAAA,OAAH,6FAKGA,EAAAA,EAAAA,MAAH,0KASLE,EAASF,EAAAA,EAAAA,OAAH,0CAING,EAAcH,EAAAA,EAAAA,OAAH,sPAcXI,EAAgBJ,EAAAA,EAAAA,OAAH,oOAabK,GAAcL,EAAAA,EAAAA,GAAOM,EAAAA,IAAPN,CAAH,2E,UC5CT,SAASO,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAWD,EAAAA,EAAAA,QAAO,OAGxBE,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,CAACJ,IAEJ,IAAMI,EAAW,WACfC,UAAUC,aACPC,aAAa,CACZC,MAAO,CACLC,MAAO,CAAEC,IAAK,IAAKC,MAAO,IAAKC,IAAK,KACpCC,OAAQ,CAAEH,IAAK,IAAKC,MAAO,KAAMC,IAAK,MACtCE,WAAY,UAGfC,MAAK,SAAAC,GACJ,IAAIR,EAAQR,EAASiB,QACrBT,EAAMU,UAAYF,EAClBR,EAAMW,MACP,IACAC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EACjB,GACJ,EAmED,OACE,UAACjC,EAAD,YACE,SAACE,EAAD,CAAOiC,UAAW,kBAtDA,WACpB,IAAIf,EAAQR,EAASiB,QACjBO,EAAQtB,EAASe,QACjBQ,EAAMD,EAAME,WAAW,MAK3B,OAFAF,EAAMf,MAFQ,IAGde,EAAMX,OAFS,KAGRc,aAAY,WACjBF,EAAIG,UAAUpB,EAAO,EAAG,EALZ,IACC,KAKd,GAAE,IACJ,CA2C2BqB,EAAN,EAAuBC,IAAK9B,KAC9C,SAACT,EAAD,CAAQuC,IAAK5B,KACb,SAACT,EAAD,CAAesC,KAAK,SAApB,UACE,SAACrC,EAAD,OAEF,SAACF,EAAD,CAAauC,KAAK,SAASC,QAAS,kBA/BtB,WAChB,IAEMC,EAAQ,CAAEC,IAFJhC,EAASe,QACFkB,UAAU,eAE7BpC,EAAW,GAAD,eAAKD,GAAL,CAAcmC,KACxBG,QAAQC,IAAIvC,EACb,CAyB6CwC,EAAN,MASzC,C","sources":["pages/camera/camera.styled.jsx","pages/camera/camera.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { GrGallery } from 'react-icons/gr';\n\nexport const Container = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Frame = styled.iframe`\n  border-top-left-radius: 1.2em;\n  border-top-right-radius: 1.2em;\n`;\n\nexport const Video = styled.video`\n  position: absolute;\n  width: 300px;\n  height: 95%;\n  object-fit: cover;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n`;\n\nexport const Canvas = styled.canvas`\n  display: none;\n`;\n\nexport const ButtonPhoto = styled.button`\n  position: absolute;\n  bottom: 7%;\n  left: 50%;\n  transform: translate(-50%, -7%);\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  border: none;\n  background: #ffffffcc;\n  z-index: 2;\n  cursor: pointer;\n`;\n\nexport const ButtonGallery = styled.button`\n  position: absolute;\n  bottom: 7%;\n  left: 20%;\n  transform: translate(-50%, -7%);\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  border: none;\n  z-index: 2;\n  background: transparent;\n`;\n\nexport const IconGallery = styled(GrGallery)`\n  width: 100%;\n  height: 100%;\n  fill: #ffffff;\n`;\n","import React, { useEffect, useState, useRef } from 'react';\nimport {\n  Container,\n  Video,\n  Canvas,\n  ButtonPhoto,\n  ButtonGallery,\n  IconGallery,\n} from './camera.styled';\n\nexport default function Camera() {\n  const [gallery, setGallery] = useState([]);\n  const videoRef = useRef(null);\n  const photoRef = useRef(null);\n  // const stripRef = useRef(null);\n\n  useEffect(() => {\n    getVideo();\n  }, [videoRef]);\n\n  const getVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: {\n          width: { min: 360, ideal: 720, max: 980 },\n          height: { min: 640, ideal: 1280, max: 1920 },\n          facingMode: 'user',\n        },\n      })\n      .then(stream => {\n        let video = videoRef.current;\n        video.srcObject = stream;\n        video.play();\n      })\n      .catch(err => {\n        throw new Error(err);\n      });\n  };\n\n  // const getVideo = () => {\n  //   navigator.mediaDevices\n  //     .getUserMedia({ video: { width: 300 } })\n  //     .then(stream => {\n  //       let video = videoRef.current;\n  //       video.srcObject = stream;\n  //       video.play();\n  //     })\n  //     .catch(err => {\n  //       console.error('error:', err);\n  //     });\n  // };\n\n  const paintToCanvas = () => {\n    let video = videoRef.current;\n    let photo = photoRef.current;\n    let ctx = photo.getContext('2d');\n    const width = 720;\n    const height = 1280;\n    photo.width = width;\n    photo.height = height;\n    return setInterval(() => {\n      ctx.drawImage(video, 0, 0, width, height);\n    }, 200);\n  };\n\n  // const paintToCanvas = () => {\n  //   let video = videoRef.current;\n  //   let photo = photoRef.current;\n  //   let ctx = photo.getContext('2d');\n\n  //   const width = 320;\n  //   const height = 240;\n  //   photo.width = width;\n  //   photo.height = height;\n\n  //   return setInterval(() => {\n  //     ctx.drawImage(video, 0, 0, width, height);\n  //   }, 200);\n  // };\n\n  const takePhoto = () => {\n    let photo = photoRef.current;\n    const data = photo.toDataURL('image/jpeg');\n    const image = { src: data };\n    setGallery([...gallery, image]);\n    console.log(gallery);\n  };\n\n  // const takePhoto = () => {\n  //   let photo = photoRef.current;\n  //   let strip = stripRef.current;\n\n  //   console.warn(strip);\n\n  //   const data = photo.toDataURL('image/jpeg');\n\n  //   console.warn(data);\n  //   const link = document.createElement('a');\n  //   link.href = data;\n  //   link.setAttribute('download', 'myWebcam');\n  //   link.innerHTML = `<img src='${data}' alt='thumbnail'/>`;\n  //   strip.insertBefore(link, strip.firstChild);\n  // };\n\n  return (\n    <Container>\n      <Video onCanPlay={() => paintToCanvas()} ref={videoRef} />\n      <Canvas ref={photoRef} />\n      <ButtonGallery type=\"button\">\n        <IconGallery />\n      </ButtonGallery>\n      <ButtonPhoto type=\"button\" onClick={() => takePhoto()}></ButtonPhoto>\n      {/* <button onClick={() => takePhoto()}>Take a photo</button>\n      <video onCanPlay={() => paintToCanvas()} ref={videoRef} />\n      <canvas ref={photoRef} />\n      <div>\n        <div ref={stripRef} />\n      </div> */}\n    </Container>\n  );\n}\n"],"names":["Container","styled","Video","Canvas","ButtonPhoto","ButtonGallery","IconGallery","GrGallery","Camera","useState","gallery","setGallery","videoRef","useRef","photoRef","useEffect","getVideo","navigator","mediaDevices","getUserMedia","video","width","min","ideal","max","height","facingMode","then","stream","current","srcObject","play","catch","err","Error","onCanPlay","photo","ctx","getContext","setInterval","drawImage","paintToCanvas","ref","type","onClick","image","src","toDataURL","console","log","takePhoto"],"sourceRoot":""}